user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
  worker_connections  1024;
}


http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;
  error_log /var/log/nginx/error.log;

  sendfile        on;
  #tcp_nopush     on;

  keepalive_timeout  65;

  #gzip  on;

  server{
    listen 80;
    charset UTF-8;
    root /var/www/html;
    index index.html;
    server_name _;

    location / {
        set $cors *;
        if ($http_origin != "") {
            set $cors $http_origin;
        }
        
        if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin $cors always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers * always;
            add_header Access-Control-Allow-Credentials true always;
            return 204;
        }
        
        add_header Access-Control-Allow-Headers * always;
        add_header Access-Control-Expose-Headers * always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Origin $cors always;
        
        proxy_hide_header Access-Control-Allow-Headers;
        proxy_hide_header Access-Control-Expose-Headers;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header Connection $http_connection;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Origin "https://kahoot.it";
        proxy_set_header Host "kahoot.it";
        proxy_set_header Referer "https://kahoot.it/";
        proxy_pass https://kahoot.it/;
    }

    location /apis/ {
        set $cors *;
        if ($http_origin != "") {
            set $cors $http_origin;
        }

        if ($request_method = "OPTIONS") {
            add_header Access-Control-Allow-Origin $cors always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, PATCH, OPTIONS" always;
            add_header Access-Control-Allow-Headers * always;
            add_header Access-Control-Allow-Credentials true always;
            return 204;
        }
        
        add_header Access-Control-Allow-Headers * always;
        add_header Access-Control-Expose-Headers * always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Origin $cors always;
        
        proxy_hide_header Access-Control-Allow-Headers;
        proxy_hide_header Access-Control-Expose-Headers;
        proxy_hide_header Access-Control-Allow-Credentials;
        proxy_hide_header Access-Control-Allow-Origin;
        proxy_set_header User-Agent $http_user_agent;
        proxy_set_header Connection $http_connection;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Origin "https://kahoot.it";
        proxy_set_header Host "apis.kahoot.it";
        proxy_set_header Referer "https://kahoot.it/";
        proxy_pass https://apis.kahoot.it/;
    }

    location ~ /\. {
      deny all;
    }

    etag on;
    gzip on;

    client_max_body_size 100M;
    client_body_buffer_size 128K;

    proxy_connect_timeout       600;
    proxy_send_timeout          600;
    proxy_read_timeout          600;
    send_timeout                600;
    uwsgi_read_timeout          600;

    expires 1d;
    gzip_disable "msie6";
    gzip_comp_level 6;
    gzip_min_length 1100;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        image/svg+xml;

 }
    #include /etc/nginx/conf.d/*.conf;
}
